---
- name: Manage Java Keystore and System CA Trust
  hosts: all
  become: true
  vars:
    cert_source_dir: /etc/pki/ca-trust/source/anchors/
    java_keystore_path: /opt/demo-keystore/cacerts
    java_keystore_password: changeit

  tasks:
    - name: Gather current user info
      ansible.builtin.setup:
        filter: ansible_user

    - name: Process each .crt certificate
      block:
        - name: Check if certificate exists
          ansible.builtin.stat:
            path: "{{ item }}"
          register: cert_status

        - name: Fail if certificate is missing
          ansible.builtin.fail:
            msg: "Certificate not found at {{ item }}"
          when: not cert_status.stat.exists

        - name: Copy certificate to EE-accessible path
          ansible.builtin.copy:
            src: "{{ item }}"
            dest: "/tmp/{{ item | basename }}"
            remote_src: yes

        - name: Check if keystore file exists
          ansible.builtin.stat:
            path: "{{ java_keystore_path }}"
          register: keystore_status

        - name: Check write permission on keystore file
          ansible.builtin.command: "test -w {{ java_keystore_path }}"
          register: write_check
          ignore_errors: true
          when: keystore_status.stat.exists

        - name: Check read permission on keystore file
          ansible.builtin.command: "test -r {{ java_keystore_path }}"
          register: read_check
          ignore_errors: true
          when: keystore_status.stat.exists

        - name: Check write permission on parent directory if keystore doesn't exist
          ansible.builtin.command: "test -w {{ java_keystore_path | dirname }}"
          register: dir_write_check
          ignore_errors: true
          when: not keystore_status.stat.exists

        - name: Fail if keystore file is not writable
          ansible.builtin.fail:
            msg: "User '{{ ansible_user }}' does not have write permissions on {{ java_keystore_path }}"
          when: keystore_status.stat.exists and write_check.rc != 0

        - name: Fail if keystore file is not readable
          ansible.builtin.fail:
            msg: "User '{{ ansible_user }}' does not have read permissions on {{ java_keystore_path }}"
          when: keystore_status.stat.exists and read_check.rc != 0

        - name: Fail if keystore does not exist and parent dir is not writable
          ansible.builtin.fail:
            msg: "User '{{ ansible_user }}' does not have write permissions on directory {{ java_keystore_path | dirname }}"
          when: not keystore_status.stat.exists and dir_write_check.rc != 0

        - name: Import certificate into Java keystore
          community.general.java_cert:
            cert_path: "/tmp/{{ item | basename }}"
            keystore_path: "{{ java_keystore_path }}"
            keystore_pass: "{{ java_keystore_password }}"
            keystore_create: true
            state: present
            cert_alias: "{{ item | basename | regex_replace('\\.[^.]+$', '') }}"
            trust_cacert: true

        - name: Copy certificate to system trust anchors
          ansible.builtin.copy:
            src: "{{ item }}"
            dest: "{{ cert_source_dir }}{{ item | basename }}"
            remote_src: yes
      with_fileglob:
        - "{{ cert_source_dir }}*.crt"

    - name: Update system CA trust
      ansible.builtin.command: update-ca-trust
